// <auto-generated />
using System;
using FirstZX.Datalayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FirstZX.Datalayer.Migrations
{
    [DbContext(typeof(FirstZXContext))]
    partial class FirstZXContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuyOrSell")
                        .HasColumnType("int");

                    b.Property<string>("Cryptocurrency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("RatioCryptocurrency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserAnswerId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("UserAnswerId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankDetailEarn", b =>
                {
                    b.Property<int>("BankDetailEarnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("RewardEarnmonth1")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnmonth2")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnmonth3")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnmonth4")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankDetailEarnId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BankDetailEarn");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankDetailEarnWeek", b =>
                {
                    b.Property<int>("BankDetailEarnWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("RewardEarnWeek1")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnWeek2")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnWeek3")
                        .HasColumnType("float");

                    b.Property<double>("RewardEarnWeek4")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankDetailEarnWeekId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("BankDetailEarnWeek");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankMonth", b =>
                {
                    b.Property<int>("BankMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Binary")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("DirectSell")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("InDirect")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("InvestMonth")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("Matrix")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("Saving")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("UniLevel")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankMonthId");

                    b.HasIndex("UserId");

                    b.ToTable("BankMonths");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankRequest", b =>
                {
                    b.Property<int>("BankRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CashOut")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfirmCashout")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfirmReinvest")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Reinvest")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankRequestId");

                    b.HasIndex("UserId");

                    b.ToTable("BankRequests");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankWeek", b =>
                {
                    b.Property<int>("BankWeekId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Binary")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("DirectSell")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("InDirect")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("InvestWeek")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("Matrix")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("Saving")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<double>("UniLevel")
                        .HasMaxLength(50)
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BankWeekId");

                    b.HasIndex("UserId");

                    b.ToTable("BankWeeks");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActiveCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DigitalWalletId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IdentifireEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("IdentifireKey")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Rank")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SelectedPlan")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.UserAnswer", b =>
                {
                    b.Property<int>("UserAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserAnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnswer");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.UserRole", b =>
                {
                    b.Property<int>("UR_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UR_Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.Answer", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.UserAnswer", "UserAnswer")
                        .WithMany("Answers")
                        .HasForeignKey("UserAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAnswer");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankDetailEarn", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithOne("BankDetailEarn")
                        .HasForeignKey("FirstZX.Datalayer.Entities.User.BankDetailEarn", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankDetailEarnWeek", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithOne("BankDetailEarnWeek")
                        .HasForeignKey("FirstZX.Datalayer.Entities.User.BankDetailEarnWeek", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankMonth", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithMany("BankMonths")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankRequest", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithMany("BankRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.BankWeek", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithMany("BankWeeks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.UserAnswer", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithMany("UserAnswers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.UserRole", b =>
                {
                    b.HasOne("FirstZX.Datalayer.Entities.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FirstZX.Datalayer.Entities.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.User", b =>
                {
                    b.Navigation("BankDetailEarn");

                    b.Navigation("BankDetailEarnWeek");

                    b.Navigation("BankMonths");

                    b.Navigation("BankRequests");

                    b.Navigation("BankWeeks");

                    b.Navigation("UserAnswers");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("FirstZX.Datalayer.Entities.User.UserAnswer", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
